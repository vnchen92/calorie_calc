{"version":3,"file":"main.js","mappings":"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","sources":["webpack://calorie_calculator/./src/index.js","webpack://calorie_calculator/./src/scripts/chart.js","webpack://calorie_calculator/./src/scripts/data.js","webpack://calorie_calculator/webpack/bootstrap"],"sourcesContent":["const {config, updateChart, clearChart, showList} = require(\"./scripts/chart.js\");\r\n// const {allItems} = require(\"./scripts/data.js\");\r\n//const {getData} = require(\"./scripts/options.js\");\r\n//const updateChart = chart => {};\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    const ctx = document.getElementById(\"canvas-chart\").getContext(\"2d\");\r\n    const myChart = new Chart(ctx, config);\r\n\r\n    updateChart(myChart);\r\n    clearChart(myChart);\r\n    showList();\r\n\r\n});\r\n\r\n\r\n//import all js files here, require\r\n//use window.#whatver class you have to  to test things\r\n// window.GameClass = Game","const {allItems} = require(\"./data.js\");\r\n\r\nconst calLabels = ['Protein', 'Carb', 'Fat'];\r\n\r\nconst calCount = {\r\n    labels: calLabels,\r\n    datasets: [{\r\n        data: [0, 0, 0],\r\n        backgroundColor: [\r\n            'rgb(191, 196, 134, .7)',\r\n            'rgb(111, 214, 90, .7)',\r\n            'rgb(217, 217, 95, .7)'\r\n        ],\r\n        borderColor: [\r\n            'rgb(191, 196, 134)',\r\n            'rgb(111, 214, 90)',\r\n            'rgb(217, 217, 95)'\r\n        ],\r\n        borderWidth: 2,\r\n        hoverBackgroundColor: 'rgb(204, 147, 73, .7)',\r\n        hoverBorderColor: 'rgb(204, 147, 73)'\r\n    }]\r\n};\r\n\r\n// const currentTotalCalLine = {\r\n//     beforeDataSetsDraw(chart, args, options){\r\n//         const {ctx, chartArea: {top, right, bottom, left, width, height}, scales: {x, y}} = chart;\r\n//         ctx.save();\r\n//         ctx.strokeStyle = 'yellow';\r\n//         ctx.setLineDash([10,10]);\r\n//         ctx.strokeRect(left, y.getPixelForValue(500), width, 0);\r\n//         ctx.restore();\r\n//     }\r\n// }\r\n\r\nexports.config = {\r\n    type: 'bar',\r\n    data: calCount,\r\n    options: {\r\n        scales: {\r\n            x: {\r\n                grid: {\r\n                    borderColor: 'rgb(204, 147, 73)'\r\n                },\r\n                ticks: {\r\n                    \r\n                }\r\n            },\r\n            y: {\r\n                grid: {\r\n                    borderColor: 'rgb(204, 147, 73)'\r\n                },\r\n                title: {\r\n                    display: true,\r\n                    text: 'Calories per Macro'\r\n                    //color:\r\n                },\r\n                ticks: {\r\n                    \r\n                },\r\n                max: 1000\r\n            },\r\n        },\r\n        plugins: {\r\n            legend: {\r\n                display: false\r\n            },\r\n            tooltip: {\r\n                yAlign: 'bottom',\r\n                displayColors: false,\r\n                backgroundColor: 'rgba(158, 161, 122, 0.5)',\r\n                titleFontColor: 'white',\r\n                titleAlign: 'center',\r\n                titleMarginBottom: 0,\r\n                bodyFontColor: 'white',\r\n                borderWidth: 1,\r\n                borderColor: 'white',\r\n                callbacks: {\r\n                    label: function(item, data){\r\n                        let currentCal = item.raw;\r\n                        if (item.label === 'Protein' || item.label === 'Carb'){\r\n                            return `${Math.floor(currentCal/4)}g`;\r\n                        } else {\r\n                            return `${Math.floor(currentCal/9)}g`;\r\n                        }\r\n                    },\r\n                    afterLabel: function(item, data){\r\n                        return `${item.raw} kcal`\r\n                    },\r\n                    footer: function(item, data){\r\n                        let totalCal = 0;\r\n                        let currentCal = item[0].raw;\r\n                        let dataArray = item[0].dataset.data;\r\n                        for (let i = 0; i < dataArray.length; i++){\r\n                            totalCal += dataArray[i];\r\n                        }\r\n                        return `${Math.round((currentCal/totalCal) * 100)}% of Total Calories`;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //plugins: [currentTotalCalLine]\r\n};\r\n\r\nlet liCollection = document.getElementsByClassName(\"option\");\r\nlet listItems = [];\r\n\r\n//FULLY FUNCTIONAL\r\nconst createList = (arg) => {\r\n    let ulItemList = document.getElementById(\"selected-list-text\");\r\n    listItems.push(arg);\r\n    if (listItems.length === 0) {\r\n        ulItemList.innerText = listItems[i];\r\n    } else {\r\n        let structuredList = \"\";\r\n        for (let i = 0; i < listItems.length; i++){\r\n            structuredList += listItems[i] + \"\\n\";\r\n        }\r\n        ulItemList.innerText = structuredList;\r\n    }\r\n}\r\n\r\n// DOES NOT WORK/ERRORS OUT\r\n// const deleteFromList = (arg) => {\r\n//     let updatedList = [];\r\n//     let ulItemList = document.getElementById(\"selected-list-text\");\r\n//     //console.log(arg);\r\n//     //console.log(listItems);\r\n//     //debugger\r\n//     if (listItems.includes(arg)){\r\n//         let argIndex = listItems.indexOf(arg);\r\n//         updatedList = listItems.slice(0, argIndex).concat(listItems.slice(argIndex+1));\r\n//     }\r\n//     let structuredList = \"\";\r\n//     for (let i = 0; i < updatedList.length; i++){\r\n//         structuredList += updatedList[i] + \"\\n\";\r\n//     }\r\n//     ulItemList.innerText = structuredList;\r\n// }\r\n\r\nexports.updateChart = (chart) => {\r\n    let numElement = document.getElementById(\"total-cal-num\");\r\n    let datasetObj = chart.config.data.datasets[0];\r\n    for (let i = 0; i < liCollection.length; i++){\r\n        let li = liCollection[i];\r\n        li.addEventListener(\"click\", e => {\r\n            let liInnerText = li.innerText;\r\n            let nameOfItem = allItems[liInnerText];\r\n            if (li.getAttribute(\"clicked\") === \"no\"){\r\n                li.setAttribute(\"clicked\", \"yes\");\r\n                datasetObj.data[0] += (nameOfItem.protein * 4);\r\n                datasetObj.data[1] += (nameOfItem.carb * 4);\r\n                datasetObj.data[2] += (nameOfItem.totalFat * 9);\r\n                numElement.innerText = datasetObj.data[0] + datasetObj.data[1] + datasetObj.data[2];\r\n                createList(liInnerText);\r\n                return chart.update();\r\n            } else {\r\n                li.setAttribute(\"clicked\", \"no\");\r\n                datasetObj.data[0] -= (nameOfItem.protein * 4);\r\n                datasetObj.data[1] -= (nameOfItem.carb * 4);\r\n                datasetObj.data[2] -= (nameOfItem.totalFat * 9);\r\n                numElement.innerText -= ((nameOfItem.protein * 4) + (nameOfItem.carb * 4) + (nameOfItem.totalFat * 9));\r\n                //debugger\r\n                deleteFromList(liInnerText);\r\n                return chart.update();\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexports.showList = () => {\r\n    let liSelectedList = document.getElementById(\"selected-list\");\r\n    liSelectedList.addEventListener(\"click\", e => {\r\n        if (liSelectedList.classList.contains('active')) {\r\n            liSelectedList.classList.remove('active');\r\n        } else {\r\n            liSelectedList.classList.add('active');\r\n        }\r\n    })\r\n}\r\n\r\nexports.clearChart = (chart) => {\r\n    let liClear = document.querySelector(\".clear-button\");\r\n    let numElement = document.getElementById(\"total-cal-num\");\r\n    let datasetObj = chart.config.data.datasets[0];\r\n    liClear.addEventListener(\"click\", e => {\r\n        for (let i = 0; i < liCollection.length; i++){\r\n            let li = liCollection[i];\r\n            li.setAttribute(\"clicked\", \"no\");\r\n        }\r\n        datasetObj.data[0] = 0;\r\n        datasetObj.data[1] = 0;\r\n        datasetObj.data[2] = 0;\r\n        numElement.innerText = 0;\r\n        return chart.update();\r\n    })\r\n}","const breads = require('../data/bread.json');\r\nconst cheeses = require('../data/cheese.json');\r\nconst condiments = require('../data/condiments.json');\r\nconst proteins = require('../data/proteins.json');\r\nconst toppings = require('../data/toppings.json');\r\n\r\nconst allItems = {};\r\n\r\nfunction addToItems(itemObj){\r\n    for (let key in itemObj){\r\n        allItems[key] = itemObj[key];\r\n    }\r\n}\r\n\r\naddToItems(breads);\r\naddToItems(cheeses);\r\naddToItems(condiments);\r\naddToItems(proteins);\r\naddToItems(toppings);\r\n\r\n\r\nmodule.exports = {allItems};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n"],"names":["config","updateChart","clearChart","showList","allItems","require","exports","type","data","labels","datasets","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","options","scales","x","grid","ticks","y","title","display","text","max","plugins","legend","tooltip","yAlign","displayColors","titleFontColor","titleAlign","titleMarginBottom","bodyFontColor","callbacks","label","item","currentCal","raw","Math","floor","afterLabel","footer","totalCal","dataArray","dataset","i","length","round","liCollection","document","getElementsByClassName","listItems","chart","numElement","getElementById","datasetObj","li","addEventListener","e","liInnerText","innerText","nameOfItem","getAttribute","setAttribute","protein","carb","totalFat","arg","ulItemList","push","structuredList","createList","update","deleteFromList","liSelectedList","classList","contains","remove","add","liClear","querySelector","breads","cheeses","condiments","proteins","toppings","addToItems","itemObj","key","module","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","ctx","getContext","myChart","Chart"],"sourceRoot":""}